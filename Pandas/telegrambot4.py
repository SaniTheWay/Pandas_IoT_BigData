# -*- coding: utf-8 -*-
"""Telegrambot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/167tjIM3mW9fK9xNp0w8slBhJ_pAlgyQU
"""

# !pip install gspread
# !pip install --upgrade google-api-python-client oauth2client

import gspread
import pandas as pd 
import numpy as nm
import matplotlib as plt
from oauth2client.service_account import ServiceAccountCredentials
import matplotlib.pyplot as plt
import seaborn as sn
# from google.colab import files
# uploaded = files.upload()
#https://www.analyticsvidhya.com/blog/2020/07/read-and-update-google-spreadsheets-with-python/
#https://gspread.readthedocs.io/en/latest/user-guide.html



scope = ['https://spreadsheets.google.com/feeds','https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name('project1-858f381dbd99.json', scope)
client = gspread.authorize(creds)

sheet = client.open('Daily Programming')
sheet_instance= sheet.get_worksheet(0)

# sheet_instance.col_count
# name= input("Enter Name: ")
# S = sheet_instance.findall(name)
# record_data = sheet_instance.get_all_records()
# record_data

# e=str(S[0]).split(" ")
# E=e[1].split("R")
# cor = E[1].split("C")
# R=cor[0]
# C=cor[1]

# !pip install gspread_formatting
# from gspread_formatting import *
# from gspread_formatting.dataframe import format_with_dataframe, BasicFormatter
# from gspread_formatting import Color

# rec_df.describe()
# only_rows_with_yellow_color
# get_default_formate = CellFormat()
# get_default_formate
# only_rows_with_yellow_color
# aa=rec_df["AC"]
# x=True
# x if aa.style.bg_color in {utils.colors.green, '#00FF00'} else np.nan
# list(plt.colors.cnames.values())

# sf = StyleFrame(rec_data)
# only_rows_with_green_bg_color
# for i in rec_df:
# rec_sani= rec_df[rec_df['The Way']=='yes']
# rec_sani['Sanidhya Dave']

l = sheet_instance.get_all_records()
rec_df = pd.DataFrame(l)
col_name = rec_df.columns.tolist()

# for i in range(3,len(col_name)):
#   print(len(rec_df[rec_df[col_name[i]]=='yes']))
# col_name
# len(rec_df[rec_df[col_name[i]]=='yes'])

# name = col_name[]
# name
# name

j=3
k=0
name = []*10
rec_size = []*10
lit = []*10
index=0
for i in range(3,len(col_name)): 
  name.append(col_name[i])
  el = rec_df[rec_df[col_name[i]]=='yes']
  rec_size.append(len(el[name[k]]))
  k+=1
sz=len(name)
def data_print():
  for f in range(0,sz):
    lit.append(name[f] + " - " + str(rec_size[f]))
data_print()
lit

from PIL import Image

def figg(rec_size,name):
  fig = plt.figure(figsize = (len(name),max(rec_size)))
  # plt.bar(name,rec_size,edgecolor="black",color='green',width=-1)
  plt.barh(name,rec_size)
  plt.xlabel("No. Of Questions done")
  plt.ylabel("Name")
  plt.title("Daily Programming")
  plt.savefig("savedfile_s.png")
  plt.show()
  # plt.figure()
figg(rec_size, name)

im = Image.open(r"/content/savedfile_s.png")
im.show("REdo",command='show')

# !find . -name "*.png" -delete